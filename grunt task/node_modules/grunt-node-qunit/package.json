{
  "name": "grunt-node-qunit",
  "description": "Grunt task running node-qnuit [https://github.com/kof/node-qunit]",
  "version": "2.0.1",
  "homepage": "https://github.com/axemclion/grunt-node-qunit",
  "author": {
    "name": "Parashuram",
    "email": "code@nparashuram.com",
    "url": "http://nparashuram.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/axemclion/grunt-node-qunit.git"
  },
  "bugs": {
    "url": "https://github.com/axemclion/grunt-node-qunit/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/axemclion/grunt-node-qunit/blob/master/LICENSE-MIT"
    }
  ],
  "main": "grunt.js",
  "bin": {
    "grunt-node-qunit": "bin/grunt-node-qunit"
  },
  "engines": {
    "node": ">=0.6"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "qunit": "0.5.15"
  },
  "peerDependency": {
    "grunt": "~0.4.0"
  },
  "devDependencies": {
    "grunt": "~0.4.0",
    "grunt-contrib-jshint": "~0.1.1",
    "npm": "~1.2.12"
  },
  "keywords": [
    "gruntplugin",
    "grunt",
    "node-qunit",
    "qunit",
    "test"
  ],
  "_id": "grunt-node-qunit@2.0.1",
  "optionalDependencies": {},
  "_engineSupported": true,
  "_npmVersion": "1.1.16",
  "_nodeVersion": "v0.6.15",
  "_defaultsLoaded": true,
  "_from": "grunt-node-qunit@",
  "readme": "grunt-node-qunit\n\n[![Build Status](https://api.travis-ci.org/axemclion/grunt-node-qunit.png?branch=master)](https://travis-ci.org/axemclion/grunt-node-qunit)\n\n-----------------\n\nA Grunt task for running [node-qunit](https://github.com/kof/node-qunit)\n\n[Grunt](http://gruntjs.com/) is a task-based command line build tool for JavaScript projects, based on nodejs. \n[Node-Qunit](https://github.com/kof/node-qunit) is a Qunit testing framework for nodejs\n[QUnit](http://qunitjs.com/) is a powerful, easy-to-use JavaScript unit test suite used by the jQuery, jQuery UI and jQuery Mobile projects and is capable of testing any generic JavaScript code, including itself! \n\n# About the tool\n\nThe Grunt Node-Qunit task is a wrapper for the node-qunit task to be used in grunt. The parameters used are the exact parameters used with the [node-quit](https://github.com/kof/node-qunit#via-api) package.\n\n## How is this different from [grunt-nodeunit](https://github.com/gruntjs/grunt-contrib-nodeunit)\n\nGrunt NodeUnit task uses the [nodeunit](https://github.com/caolan/nodeunit/) testing framework. The syntax is slightly different and uses the [node-qunit](https://github.com/kof/node-qunit#via-api). The syntax for this task is exactly like the qunit syntax. \n\n#Usage\n\nThis task is available as a [node package](https://npmjs.org/package/grunt-node-qunit) and can be installed as `npm install grunt-node-qunit`. It can also be included as a devDependency in package.json in your node project. \nTo use the task in `grunt.js`, load the npmTask. \n\n\n```javascript\ngrunt.loadNpmTasks('grunt-node-qunit');\n\n``` \n\n__Note that this is *NOT* a multi task. Node-Qunit is used via the API, as described [here](https://github.com/axemclion/grunt-node-qunit.git). \n\n\nThe parameters are \n\n* __setup__ : An object passed to qunit.setup\n* __deps__ : define dependencies, which are required then before code, passed in qunit.run()\n* __code__ : define the code that needs to be tested\n* __tests__: define the test files\n* __done__ : A callback that is called everytime a qunit test for a page is complete. Runs per page, per browser configuration. A true or false return value passes or fails the test, undefined return value does not alter the result of the test. For async results, call `this.async()` in the function. The return of `this.async()` is a function that should be called once the async action is completed.\n\n#Example\n\nInside the grunt.initConfig, add a section\n\n```\n\ngrunt.initConfig({\n\t//....\n\t'node-qunit': {\n\t\tdeps: './src/pouch.js',\n\t\tcode: './src/adapters/pouch.leveldb.js',\n\t\ttests: testFiles.map(function(n){\n\t\t\treturn \"./tests/\" + n;\n\t\t}),\n\t\tdone: function(err, res){\n\t\t\t!err && publishResults(\"node\", res, this.async());\n\t\t}\n\t},\n\t// ....\n}); // end of grunt.initConfig\n\n```\n\n// Elsewhere in the grunt file\ngrunt.loadNpmTasks('grunt-node-qunit');\n",
  "readmeFilename": "README.md",
  "dist": {
    "shasum": "c329111674b99c72731ac1bf3b0470f8754bacd3"
  },
  "_resolved": "http://registry.npmjs.org/grunt-node-qunit/-/grunt-node-qunit-2.0.1.tgz"
}
